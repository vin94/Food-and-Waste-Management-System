/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ngo.ngoAdmin;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.Util.Validation.Validation;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author siri chowdhary
 */
public class NGOManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NGOManageUserAccount
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem business;
    

    public NGOManageUserAccountJPanel ( JPanel userProcessContainer , Enterprise enterprise, EcoSystem business) {
        
        initComponents();
        
        this.enterprise  =  enterprise;
        this.userProcessContainer  =  userProcessContainer;
        this.business  =  business;

        populateOrganizationComboBox();
        populateData();
        
    }
    
     public void populateData()  
    {

        DefaultTableModel dtm  =  (DefaultTableModel) userTable.getModel();
        dtm.setRowCount(0);

        for( Organization organization  :  enterprise.getOrganizationDirectory().getOrganizationList())   
        {
            for( UserAccount ua  :  organization.getUserAccountDirectory().getUserAccountList())   
            {
                Object row[]  =  new Object[2];
                row[0]  =  ua;
                row[1]  =  ua.getRole();
                dtm.addRow(row);
            }
        }
    }

    public void populateOrganizationComboBox()  
    {
        organiztionComboBox.removeAllItems();

        for( Organization organization  :  enterprise.getOrganizationDirectory().getOrganizationList())   
        {
            organiztionComboBox.addItem(organization);
        }
    }
    

    public void populateEmployeeComboBox ( Organization organization)   {
        
        employeeComboBox.removeAllItems();

        for( Employee employee  :  organization.getEmployeeDirectory().getEmployeeList())   
        {
            if(organization.getUserAccountDirectory().searchUser(employee)  ==  null)   
            {
                employeeComboBox.addItem(employee);

            }
        }
    }
    
    
    private void populateRoleComboBox ( Organization organization)   
    {
        roleComboBox.removeAllItems();
        
        for( Role role  :  organization.getSupportedRole())  
        {
            roleComboBox.addItem(role);
        }
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeComboBox = new javax.swing.JComboBox();
        roleLabel = new javax.swing.JLabel();
        roleComboBox = new javax.swing.JComboBox();
        userNameLabel = new javax.swing.JLabel();
        headerLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        passwordLabel = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        backButton = new javax.swing.JButton();
        organizationLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        organiztionComboBox = new javax.swing.JComboBox();
        employeeLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(204, 255, 204));

        employeeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeComboBoxActionPerformed(evt);
            }
        });

        roleLabel.setText("Role");

        roleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboBoxActionPerformed(evt);
            }
        });

        userNameLabel.setText("User Name");

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headerLabel.setText("NGO Adminstrative Work Area - Manage Users");

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(userTable);

        passwordLabel.setText("Password");

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        organizationLabel.setText("Organization");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        organiztionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organiztionComboBoxActionPerformed(evt);
            }
        });

        employeeLabel.setText("Employee");

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(backButton)
                                    .addGap(236, 236, 236)
                                    .addComponent(createButton))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(organizationLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(employeeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(roleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(roleComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 224, Short.MAX_VALUE)
                                                .addComponent(employeeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(organiztionComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(userNameTextField)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(41, 41, 41)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(headerLabel)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationLabel)
                    .addComponent(organiztionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeLabel)
                    .addComponent(employeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleLabel)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(backButton))
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout  =  (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        
        String userName  =  null;
        
        if( Validation.validateStringInput(userNameTextField)) 
        {
            userName  =  userNameTextField.getText();
        } 
        else 
        {
            return;
        }

        char[] passChar  =  passwordTextField.getPassword();
        if( passChar  ==  null  ||  passChar.length  ==  0)  
        {
            JOptionPane.showMessageDialog ( null , "Password cannot be blank" , "Warning" , JOptionPane.WARNING_MESSAGE);
            passwordTextField.setBackground(Color.RED);
            return;
        }
        else
        {
            passwordTextField.setBackground(Color.WHITE);
        }

        UserAccount ua  =  new UserAccount();
        String password  =  ua.encodePassword(String.valueOf(passChar));

        if(userName.trim()  !=  ""  &&  password.trim()  !=  "")  
        {
            Organization organization  =  (Organization) organiztionComboBox.getSelectedItem();

            if( business.checkIfUserNameIsUnique(userName))   
            {
                JOptionPane.showMessageDialog(null, "User name already exists. Please select a different one.");
                return;
            }

            Employee employee  =  (Employee) employeeComboBox.getSelectedItem();
            Role role  =  (Role) roleComboBox.getSelectedItem();

            if( organization  ==  null  ||  employee  ==  null  ||  role  ==  null) 
            {
                JOptionPane.showMessageDialog(null, "Invalid input!");
                return;
            }

            organization.getUserAccountDirectory().addUserAccount ( userName , password , employee , role);
            populateEmployeeComboBox(organization);
            populateData();
            JOptionPane.showMessageDialog(null, "User created successfully!");
            userNameTextField.setText("");
            passwordTextField.setText("");
        } 
        else 
        {
            JOptionPane.showMessageDialog(null, "Please enter username and password");
            return;
        }
    }//GEN-LAST:event_createButtonActionPerformed

    private void organiztionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organiztionComboBoxActionPerformed
        
        Organization organization  =  (Organization) organiztionComboBox.getSelectedItem();
        if( organization  !=  null) 
        {
            populateEmployeeComboBox(organization);
            populateRoleComboBox(organization);
        }
    }//GEN-LAST:event_organiztionComboBoxActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void employeeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeComboBoxActionPerformed

    private void roleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton createButton;
    private javax.swing.JComboBox employeeComboBox;
    private javax.swing.JLabel employeeLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JLabel organizationLabel;
    private javax.swing.JComboBox organiztionComboBox;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JComboBox roleComboBox;
    private javax.swing.JLabel roleLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
