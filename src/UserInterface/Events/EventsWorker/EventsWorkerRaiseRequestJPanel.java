/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Events.EventsWorker;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.NGO.NGOManagerOrganization;
import Business.UserAccount.UserAccount;
import Business.Util.Leftovers.Leftovers;
import Business.Util.Leftovers.LeftoversQuantity;
import Business.Util.Request.RequestItem;
import Business.Util.Request.RequestStatus;
import Business.WorkQueue.CollectionWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alves
 */

public class EventsWorkerRaiseRequestJPanel extends javax.swing.JPanel  {
    

    private JPanel userProcessContainer;
    private UserAccount account;
    private Network network;
    private String enterpriseName;

    /**
     * Creates new form EventsWorkerJPanel
     */
    
    public EventsWorkerRaiseRequestJPanel ( JPanel userProcessContainer,  UserAccount account,  String enterpriseName,  Network network)   {
        
        initComponents();
        
        this.userProcessContainer  =  userProcessContainer;
        this.account  =  account;
        this.network  =  network;
        this.enterpriseName  =  enterpriseName;

        DefaultTableModel dtm  =  (DefaultTableModel) foodItemsTable.getModel();
        dtm.setRowCount(0);

        populateFoodCombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        subHeaderLabel = new javax.swing.JLabel();
        foodTypeLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        quantitySpinner = new javax.swing.JSpinner();
        addButton = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        foodItemsTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        raiseRequestButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        messageTextField = new javax.swing.JTextField();
        foodComboBox = new javax.swing.JComboBox<>();
        removeButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headerLabel.setText("Events Worker Work Area - Collection Request");

        subHeaderLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        subHeaderLabel.setText("Add Food Items :");

        foodTypeLabel.setText("Food Type:");

        quantityLabel.setText("Quantity:");

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        foodItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(foodItemsTable);
        if (foodItemsTable.getColumnModel().getColumnCount() > 0) {
            foodItemsTable.getColumnModel().getColumn(0).setResizable(false);
            foodItemsTable.getColumnModel().getColumn(1).setResizable(false);
        }

        backButton.setText("<< BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        raiseRequestButton.setText("Raise Request");
        raiseRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raiseRequestButtonActionPerformed(evt);
            }
        });

        messageLabel.setText("Message:");

        messageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextFieldActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(removeButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(messageLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(backButton)
                                        .addGap(407, 407, 407)
                                        .addComponent(raiseRequestButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(subHeaderLabel)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(quantityLabel)
                                                    .addComponent(foodTypeLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(foodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(headerLabel)
                .addGap(50, 50, 50)
                .addComponent(subHeaderLabel)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodTypeLabel)
                    .addComponent(foodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityLabel)
                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(addButton)
                .addGap(71, 71, 71)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageLabel)
                    .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(raiseRequestButton)
                    .addComponent(backButton))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateFoodCombo() {

        foodComboBox.removeAllItems();

        Set foodNames =Leftovers.getLeftoversMap().keySet();
               

        for (Object name : foodNames) {
            foodComboBox.addItem((String) name);
        }

    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String food = foodComboBox.getSelectedItem().toString();
        int quantity = (Integer) quantitySpinner.getValue();
        

        if (quantity < 1) 
        {
            JOptionPane.showMessageDialog(null, "Quantity of food cannot be less than 1","Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }

       
        Object row[]  =  new Object[3];
        row[0]  =  food; 
        row[1]  =  quantity;

        DefaultTableModel dtm  =  (DefaultTableModel) foodItemsTable.getModel();
        dtm.addRow(row);


        foodComboBox.setSelectedIndex(0);
        quantitySpinner.setValue(1);
       

    }//GEN-LAST:event_addButtonActionPerformed

    private void raiseRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raiseRequestButtonActionPerformed

        String message  =  messageTextField.getText();

        DefaultTableModel dtm  =  (DefaultTableModel) foodItemsTable.getModel();

        if(dtm.getRowCount()  ==  0)   
        {
            JOptionPane.showMessageDialog(null, "No food items selected to be distributed");
            return;
        }

        ArrayList<RequestItem> requestList  =  new ArrayList();
        for(int i = 0; i < dtm.getRowCount(); i++)   
        {
            String food  =  (String) dtm.getValueAt(i, 0);
            int quantity  =  (Integer) dtm.getValueAt(i, 1);
            

            RequestItem ri  =  new RequestItem(food,quantity);
            requestList.add(ri);
            
        }

        CollectionWorkRequest request  =  new CollectionWorkRequest();
        
        request.setSender(account);
        
        request.setMessage(message);
        
        request.setRequestItems(requestList);
        
        request.setStatus(RequestStatus.getPickupStatusMessage(1));
        
        request.setTotalQuantity(LeftoversQuantity.calculateQuantity(request.getRequestItems()));
        
        request.setRaisedBy(account);
        
        request.setRaisedByEvents(enterpriseName);

        for(Enterprise e  :  network.getEnterpriseDirectory().getEnterpriseList())   
        {
            for(Organization o  :  e.getOrganizationDirectory().getOrganizationList())   
            {
                if(o instanceof NGOManagerOrganization)   
                {
                    o.getWorkQueue().getWorkRequestList().add(request);
                }
            }
        }

        account.getWorkQueue().getWorkRequestList().add(request);
        JOptionPane.showMessageDialog(null, "Request raised with NGO for further processing", "Information", JOptionPane.INFORMATION_MESSAGE);
        dtm.setRowCount(0);

        messageTextField.setText("");

    }//GEN-LAST:event_raiseRequestButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        
        CardLayout layout  =  (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        
        int selectedRow  =  foodItemsTable.getSelectedRow();
        if(selectedRow < 0)   
        {
            JOptionPane.showMessageDialog(null,"Please select an item to be removed","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DefaultTableModel dtm  =  (DefaultTableModel) foodItemsTable.getModel();
        dtm.removeRow(selectedRow);        
        
    }//GEN-LAST:event_removeButtonActionPerformed

    private void messageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> foodComboBox;
    private javax.swing.JTable foodItemsTable;
    private javax.swing.JLabel foodTypeLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JButton raiseRequestButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel subHeaderLabel;
    // End of variables declaration//GEN-END:variables
}
