/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Events.EventsManager;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Role.Role.RoleType;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CollectionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alves
 */


public class EventsManagerViewRequestLogJPanel extends javax.swing.JPanel  {

    private JPanel userProcessContainer;
    private Enterprise enterprise;

    /**
     * Creates new form EventsWorkerViewRequestLogJPanel
     */
    
    
    public EventsManagerViewRequestLogJPanel ( JPanel userProcessContainer, Enterprise enterprise)   {
        
        initComponents();
        this.userProcessContainer  =  userProcessContainer;
        this.enterprise  =  enterprise;

        populateTable();
    }

    public void populateTable()   {
        
        
        DefaultTableModel dtm  =  (DefaultTableModel) logTable.getModel();
        dtm.setRowCount(0);

        for(Organization o  :  enterprise.getOrganizationDirectory().getOrganizationList())   
        {
            for(UserAccount ua  :  o.getUserAccountDirectory().getUserAccountList())   {
                
                if((ua.getRole().getRoleType().getValue()).equals(RoleType.EventsWorker.getValue()))   
                {
                    for(WorkRequest wr  :  ua.getWorkQueue().getWorkRequestList())  
                    {
                        if(wr instanceof CollectionWorkRequest)   {
                            
                            
                            CollectionWorkRequest cwr  =  (CollectionWorkRequest) wr;
                            

                            Object row[]  =  new Object[7];
                            row[0]  =  cwr.getRequestDate();
                            row[1]  =  cwr.getRaisedBy().getEmployee().getName();
                            row[2]  =  cwr;
                            row[3]  =  cwr.getTotalQuantity();
                            row[4]  =  cwr.getDeliverToNGO()  ==  null ? "Undelivered"  :  cwr.getDeliverToNGO();
                            row[5]  =  cwr.getDeliveredByTransportation()  ==  null ? "Undelivered"  :  cwr.getDeliveredByTransportation();
                            row[6]  =  cwr.getDeliveryCost()  ==  0d ? "Undelivered"  :  "$" + cwr.getDeliveryCost();

                            dtm.addRow(row);
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        logTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        viewRequestItemButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headerLabel.setText("Events Worker Work Area - Request Log");

        logTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Raised Date", "Raised By", "Status", "Quantity(in pounds)", "Collected By", "Transportation", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(logTable);
        if (logTable.getColumnModel().getColumnCount() > 0) {
            logTable.getColumnModel().getColumn(0).setResizable(false);
            logTable.getColumnModel().getColumn(1).setResizable(false);
            logTable.getColumnModel().getColumn(2).setResizable(false);
            logTable.getColumnModel().getColumn(3).setResizable(false);
            logTable.getColumnModel().getColumn(4).setResizable(false);
            logTable.getColumnModel().getColumn(5).setResizable(false);
            logTable.getColumnModel().getColumn(6).setResizable(false);
        }

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        viewRequestItemButton.setText("View Request Item");
        viewRequestItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(724, 724, 724)
                                .addComponent(viewRequestItemButton))
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(headerLabel)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(viewRequestItemButton))
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        
        CardLayout layout  =  (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewRequestItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestItemButtonActionPerformed

        int selectedRow  =  logTable.getSelectedRow();
        
        if(selectedRow < 0)   {
            
            JOptionPane.showMessageDialog(null,"Please select a request item to view details","Information",JOptionPane.INFORMATION_MESSAGE);
        } 
        else
        {
            CollectionWorkRequest cwr  =  (CollectionWorkRequest) logTable.getValueAt(selectedRow, 2);

            EventsManagerViewLogItemJPanel eventsWorkerViewLogItemJPanel  =  new EventsManagerViewLogItemJPanel(userProcessContainer, cwr);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            
            userProcessContainer.add("EventsWorkerViewLogItemJPanel", eventsWorkerViewLogItemJPanel);
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewRequestItemButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable logTable;
    private javax.swing.JButton viewRequestItemButton;
    // End of variables declaration//GEN-END:variables
}
