/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Transportation.TransportationManager;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.Util.Request.RequestStatus;
import Business.WorkQueue.CollectionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thiag
 */
public class TransportationManagerViewRequestsJPanel extends javax.swing.JPanel   {

    /**
     * Creates new form TransportationManagerViewRequestsJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    

    public TransportationManagerViewRequestsJPanel ( JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise) {
        
        initComponents();
        
        this.userProcessContainer  =  userProcessContainer;
        this.account  =  account;
        this.organization  =  organization;
        this.enterprise  =  enterprise;
        
        populateTable();
        populateComboBox();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    private void populateComboBox()   {
        
        workerComboBox.removeAllItems();
        
        for(Organization org  :  enterprise.getOrganizationDirectory().getOrganizationList())   
        {
            for(UserAccount user  :  org.getUserAccountDirectory().getUserAccountList())   
            {
                if(user.getRole().getRoleType().getValue().equals(Role.RoleType.TransportationWorker.getValue()))   
                {
                    workerComboBox.addItem(user);
                }
            }
        }
    }

    
    
    private void populateTable()  {

        DefaultTableModel dtm  =  (DefaultTableModel) requestsTable.getModel();
        dtm.setRowCount(0);

        
        for(WorkRequest workRequest  :  organization.getWorkQueue().getWorkRequestList())   
        {
            if(workRequest instanceof CollectionWorkRequest)    
            {
                CollectionWorkRequest cwr  =  (CollectionWorkRequest) workRequest;

                // If status other than newly raised and assigned to Organization, then show
                if(cwr.getStatus().equals(RequestStatus.getPickupStatusMessage(2))) {
                    // if (cwr.getDeliveredToNGO().equals(organization.getName())) {
                    Object row[] = new Object[4];

                    row[0]  =  cwr.getRaisedBy();
                    row[1]  =  cwr.getRaisedByEvents();
                    row[2]  =  cwr.getDeliverToNGO();
                    row[3]  =  cwr;

                    dtm.addRow(row);

                }
               
            }
        }

       
    }

    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        requestsTable = new javax.swing.JTable();
        assigntoEmployeeButton = new javax.swing.JButton();
        workerComboBox = new javax.swing.JComboBox();
        workerLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        viewDetailsButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headerLabel.setText("Transportation Manager Work Area - Requests");

        requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request from", "Pickup", "Drop", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(requestsTable);
        if (requestsTable.getColumnModel().getColumnCount() > 0) {
            requestsTable.getColumnModel().getColumn(0).setResizable(false);
            requestsTable.getColumnModel().getColumn(1).setResizable(false);
            requestsTable.getColumnModel().getColumn(2).setResizable(false);
            requestsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        assigntoEmployeeButton.setText("Assign to Employee");
        assigntoEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assigntoEmployeeButtonActionPerformed(evt);
            }
        });

        workerComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        workerLabel.setText("Worker:");

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        viewDetailsButton.setText("View Details");
        viewDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backButton)
                            .addGap(476, 476, 476)
                            .addComponent(viewDetailsButton))
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(workerLabel)
                            .addGap(18, 18, 18)
                            .addComponent(workerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(assigntoEmployeeButton)))
                    .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(headerLabel)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workerLabel)
                    .addComponent(assigntoEmployeeButton))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailsButton)
                    .addComponent(backButton))
                .addGap(96, 96, 96))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assigntoEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assigntoEmployeeButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedRow  =  requestsTable.getSelectedRow();
        
        if(selectedRow < 0)   {
            
            JOptionPane.showMessageDialog(null,"Please select a request item to view details","Warning",JOptionPane.WARNING_MESSAGE);
            return;
            
        } 
        else 
        {
            CollectionWorkRequest request  =  (CollectionWorkRequest) requestsTable.getValueAt(selectedRow, 3);
            
            if(request.getStatus().equals(RequestStatus.getPickupStatusMessage(2)))   {
                
                request.setSender(account);
                
                request.setStatus(RequestStatus.getPickupStatusMessage(3));
                
                request.setDeliveredBy((UserAccount) workerComboBox.getSelectedItem());

                // Assign to own queue
                account.getWorkQueue().getWorkRequestList().add(request);

                // Assign to selected worker's queue
                UserAccount acc = (UserAccount) workerComboBox.getSelectedItem();
                acc.getWorkQueue().getWorkRequestList().add(request);

                request.setReceiver(acc);
                JOptionPane.showMessageDialog( null,"Request forwarded to Transportation worker" ,"Information" ,JOptionPane.INFORMATION_MESSAGE);

                populateTable();
            } 
            else 
            {
                JOptionPane.showMessageDialog(null , "Request not in the proper state to be processed" ,"Warning" , JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_assigntoEmployeeButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout  =  (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedRow  =  requestsTable.getSelectedRow();
        
        if (selectedRow < 0)   {
            
            JOptionPane.showMessageDialog ( null, "Please select a request item to view details" , "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        } 
        else 
        {
            CollectionWorkRequest request  =  (CollectionWorkRequest) requestsTable.getValueAt(selectedRow, 3);

            TransportationManagerViewRequestDetailsJPanel transportationManagerViewRequestDetailsJPanel  =  new TransportationManagerViewRequestDetailsJPanel(userProcessContainer, request);
            userProcessContainer.add("TransportationManagerViewRequestDetailsJPanel" , transportationManagerViewRequestDetailsJPanel);
            
            CardLayout layout  =  (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewDetailsButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assigntoEmployeeButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable requestsTable;
    private javax.swing.JButton viewDetailsButton;
    private javax.swing.JComboBox workerComboBox;
    private javax.swing.JLabel workerLabel;
    // End of variables declaration//GEN-END:variables
}
