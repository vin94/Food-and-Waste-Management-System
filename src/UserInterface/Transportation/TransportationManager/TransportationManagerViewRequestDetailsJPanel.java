/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Transportation.TransportationManager;

import Business.Util.Request.RequestItem;
import Business.WorkQueue.CollectionWorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thiag
 */
public class TransportationManagerViewRequestDetailsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private CollectionWorkRequest cwr;

    /**
     * Creates new form NGORequestViewJPanel
     */
    
    TransportationManagerViewRequestDetailsJPanel ( JPanel userProcessContainer, CollectionWorkRequest cwr)  {
        
        initComponents();
        
        this.userProcessContainer  =  userProcessContainer;
        this.cwr  =  cwr;
        
        populateTable();
        populateData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
     private void populateData()   {

        String status  =  cwr.getStatus();

        requestStatusValueLabel.setText(status);
        
        requestFromValueLabel.setText(cwr.getRaisedByEvents());
        
        requestDateValueLabel.setText(cwr.getRequestDate() + "");
        
        quantityValueLabel.setText(cwr.getTotalQuantity() + " pounds");

        String emp  =  cwr.getDeliveredBy()  ==  null ? "Undelivered"  :  cwr.getDeliveredBy().getEmployee().getName();
        pickedUpByValueLabel.setText(emp);
        
        String cost  =  cwr.getDeliveryCost()  ==  0 ? "Undelivered"  :  "$"+cwr.getDeliveryCost();
        costValueLabel.setText(cost);

    }
     
    private void populateTable()   {
        
        DefaultTableModel dtm  =  (DefaultTableModel) detailsTable.getModel();
        dtm.setRowCount(0);

        for(RequestItem ri  :  cwr.getRequestItems())   
        {
            Object row[]  =  new Object[2];
            row[0]  =  ri;
            row[1]  =  ri.getQuantity();

            dtm.addRow(row);
        }
    }
    
  

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        detailsTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        costLabel = new javax.swing.JLabel();
        quantityValueLabel = new javax.swing.JLabel();
        costValueLabel = new javax.swing.JLabel();
        requestStatusValueLabel = new javax.swing.JLabel();
        requestDateValueLabel = new javax.swing.JLabel();
        requestFromValueLabel = new javax.swing.JLabel();
        requestDateLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        requestStatusLabel = new javax.swing.JLabel();
        requestFromLabel = new javax.swing.JLabel();
        pickedUpByLabel = new javax.swing.JLabel();
        pickedUpByValueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headerLabel.setText("Transportation Manager Work Area - Request Details");

        detailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(detailsTable);
        if (detailsTable.getColumnModel().getColumnCount() > 0) {
            detailsTable.getColumnModel().getColumn(0).setResizable(false);
            detailsTable.getColumnModel().getColumn(1).setResizable(false);
        }

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        costLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        costLabel.setText("Pickup Cost:");

        quantityValueLabel.setText("quantity");

        costValueLabel.setText("cost");

        requestStatusValueLabel.setText("request_status");

        requestDateValueLabel.setText("request_date");

        requestFromValueLabel.setText("request_from");

        requestDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        requestDateLabel.setText("Request Date:");

        quantityLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        quantityLabel.setText("Food Quantity:");

        requestStatusLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        requestStatusLabel.setText("Request status:");

        requestFromLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        requestFromLabel.setText("Request from:");

        pickedUpByLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pickedUpByLabel.setText("Pickup done by:");

        pickedUpByValueLabel.setText("emp_name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton)
                    .addComponent(requestFromLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(requestStatusLabel)
                                    .addGap(26, 26, 26))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(requestDateLabel)
                                    .addGap(35, 35, 35)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(quantityLabel)
                                .addGap(33, 33, 33)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityValueLabel)
                            .addComponent(requestDateValueLabel)
                            .addComponent(requestStatusValueLabel)
                            .addComponent(requestFromValueLabel)))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costLabel)
                            .addComponent(pickedUpByLabel))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pickedUpByValueLabel)
                            .addComponent(costValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(headerLabel)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestFromLabel)
                    .addComponent(requestFromValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestDateLabel)
                    .addComponent(requestDateValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestStatusLabel)
                    .addComponent(requestStatusValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityLabel)
                    .addComponent(quantityValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickedUpByLabel)
                    .addComponent(pickedUpByValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costLabel)
                    .addComponent(costValueLabel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout  =  (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel costLabel;
    private javax.swing.JLabel costValueLabel;
    private javax.swing.JTable detailsTable;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel pickedUpByLabel;
    private javax.swing.JLabel pickedUpByValueLabel;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JLabel quantityValueLabel;
    private javax.swing.JLabel requestDateLabel;
    private javax.swing.JLabel requestDateValueLabel;
    private javax.swing.JLabel requestFromLabel;
    private javax.swing.JLabel requestFromValueLabel;
    private javax.swing.JLabel requestStatusLabel;
    private javax.swing.JLabel requestStatusValueLabel;
    // End of variables declaration//GEN-END:variables
}
