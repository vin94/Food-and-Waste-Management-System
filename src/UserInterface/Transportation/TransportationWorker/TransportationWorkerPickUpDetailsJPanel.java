/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Transportation.TransportationWorker;

import Business.UserAccount.UserAccount;
import Business.Util.Request.RequestItem;
import Business.Util.Request.RequestStatus;
import Business.WorkQueue.CollectionWorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thiag
 */
public class TransportationWorkerPickUpDetailsJPanel extends javax.swing.JPanel  {

    /**
     * Creates new form TransportationWorkerPickUpDetailsJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount account;
    private CollectionWorkRequest request;
    private Date date;

    public TransportationWorkerPickUpDetailsJPanel ( JPanel userProcessContainer , UserAccount account , CollectionWorkRequest request)  {
        
        initComponents();
        
        this.userProcessContainer  =  userProcessContainer;
        this.account  =  account;
        this.request  =  request;
        
        date = new Date();
        
        populateData();
        populateTable();
        
    }
    
     private void populateTable()   {
        
        DefaultTableModel dtm  =  (DefaultTableModel) detailsTable.getModel();
        dtm.setRowCount(0);

        for( RequestItem ri  :  request.getRequestItems()) 
        {
            Object row[]  =  new Object[2];
            row[0]  =  ri;
            row[1]  =  ri.getQuantity();
            

            dtm.addRow(row);
        }
    }
     

    public void populateData()   {
        
        requestedByValueLabel.setText(request.getRaisedBy().getEmployee().getName() +" - "+ request.getRaisedByEvents());
        
        deliveredValueLabel.setText(request.getDeliverTo().getEmployee().getName() +" - "+ request.getDeliverToNGO());
        
        packageWeightValueLabel.setText(request.getTotalQuantity() + "pounds");
        
        packageDateValueLabel.setText(date + "");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        deliveryDetailsJPanel = new javax.swing.JPanel();
        requestedByLabel = new javax.swing.JLabel();
        requestedByValueLabel = new javax.swing.JLabel();
        deliveredToLabel = new javax.swing.JLabel();
        deliveredValueLabel = new javax.swing.JLabel();
        packageDetailsLabel = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        detailsTable = new javax.swing.JTable();
        packageWeightLabel = new javax.swing.JLabel();
        packageWeightValueLabel = new javax.swing.JLabel();
        packageDateLabel = new javax.swing.JLabel();
        packageDateValueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headerLabel.setText("Transportation Worker - Pick Up ");

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        deliveryDetailsJPanel.setBackground(new java.awt.Color(255, 255, 204));
        deliveryDetailsJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Pickup Details"));

        requestedByLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        requestedByLabel.setText("Requested By:");

        requestedByValueLabel.setText("requested_by");

        deliveredToLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deliveredToLabel.setText("Delivered To:");

        deliveredValueLabel.setText("delivered_to");

        packageDetailsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        packageDetailsLabel.setText("Package Details:");

        detailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(detailsTable);

        packageWeightLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        packageWeightLabel.setText("Package Weight: ");

        packageWeightValueLabel.setText("package_weight");

        packageDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        packageDateLabel.setText("Pickup Date:");

        packageDateValueLabel.setText("delivery_date");

        javax.swing.GroupLayout deliveryDetailsJPanelLayout = new javax.swing.GroupLayout(deliveryDetailsJPanel);
        deliveryDetailsJPanel.setLayout(deliveryDetailsJPanelLayout);
        deliveryDetailsJPanelLayout.setHorizontalGroup(
            deliveryDetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryDetailsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryDetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(deliveryDetailsJPanelLayout.createSequentialGroup()
                        .addComponent(requestedByLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(requestedByValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(deliveryDetailsJPanelLayout.createSequentialGroup()
                        .addComponent(deliveredToLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deliveredValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(packageDetailsLabel)
                    .addGroup(deliveryDetailsJPanelLayout.createSequentialGroup()
                        .addComponent(packageWeightLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(packageWeightValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(deliveryDetailsJPanelLayout.createSequentialGroup()
                        .addComponent(packageDateLabel)
                        .addGap(33, 33, 33)
                        .addComponent(packageDateValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(86, 86, 86))
        );
        deliveryDetailsJPanelLayout.setVerticalGroup(
            deliveryDetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryDetailsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryDetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(requestedByValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(requestedByLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deliveryDetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deliveredToLabel)
                    .addComponent(deliveredValueLabel))
                .addGap(29, 29, 29)
                .addComponent(packageDetailsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(deliveryDetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(packageWeightLabel)
                    .addComponent(packageWeightValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deliveryDetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(packageDateLabel)
                    .addComponent(packageDateValueLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirmButton))
                        .addComponent(deliveryDetailsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(headerLabel)
                .addGap(50, 50, 50)
                .addComponent(deliveryDetailsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(confirmButton))
                .addGap(85, 85, 85))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed

        request.setSender(account);
        
        request.setStatus(RequestStatus.getPickupStatusMessage(4));
        
        request.setReceiver(request.getDeliverTo());
        
        JOptionPane.showMessageDialog ( null , "Pickup done from Events" , "Information" , JOptionPane.INFORMATION_MESSAGE);

        confirmButton.setEnabled(false);
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        
        userProcessContainer.remove(this);
        CardLayout layout  =  (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel deliveredToLabel;
    private javax.swing.JLabel deliveredValueLabel;
    private javax.swing.JPanel deliveryDetailsJPanel;
    private javax.swing.JTable detailsTable;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel packageDateLabel;
    private javax.swing.JLabel packageDateValueLabel;
    private javax.swing.JLabel packageDetailsLabel;
    private javax.swing.JLabel packageWeightLabel;
    private javax.swing.JLabel packageWeightValueLabel;
    private javax.swing.JLabel requestedByLabel;
    private javax.swing.JLabel requestedByValueLabel;
    // End of variables declaration//GEN-END:variables
}
